plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.3.6"
    id 'com.intershop.gradle.wsdl' version '3.2.2'
}

version = "0.1"
group = "es.edn"

repositories {
    mavenCentral()
}

configurations {
    wsdlAxis2.extendsFrom(compile)
}

dependencies {
    annotationProcessor("info.picocli:picocli-codegen")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("info.picocli:picocli")
    implementation("io.micronaut.picocli:micronaut-picocli")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    runtimeOnly("ch.qos.logback:logback-classic")

    implementation 'org.apache.axis2:axis2-adb:1.8.0'
    implementation 'org.apache.axis2:axis2-transport-local:1.8.0'
    implementation 'org.apache.axis2:axis2-transport-http:1.8.0'
    implementation 'org.apache.ws.commons.axiom:axiom-impl:1.3.0'

    wsdlAxis2 'org.apache.axis2:axis2-codegen:1.8.0'
    wsdlAxis2 'org.apache.axis2:axis2-adb-codegen:1.8.0'
    wsdlAxis2 'org.apache.ws.xmlschema:xmlschema-core:2.2.1'
}


application {
    mainClass = "es.edn.ChecknifcliCommand"
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


micronaut {
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("es.edn.*")
    }
}


tasks.named("dockerfileNative") {
    jdkVersion = "21"
}


graalvmNative{
    toolchainDetection = false
    binaries {
        main {
            verbose=true
            buildArgs.add("--allow-incomplete-classpath")
        }
    }
}


wsdl {
    axis2 {
        nif {
            wsdlFile = file("src/wsdls/VNifV2.wsdl")
            allPorts = true
            databindingMethod = 'adb'
            serverSide = false
            generateAllClasses = true
            unpackClasses = true
        }
        recargo {
            wsdlFile = file("src/wsdls/CompRecEquivU.wsdl")
            allPorts = true
            databindingMethod = 'adb'
            serverSide = false
            generateAllClasses = true
            unpackClasses = true
        }
    }
}

// fix wrong directory
tasks.getByName("axis2Wsdl2javaNif").doLast {
    ant.move(
            file:file('build/generated/wsdl2java/axis2/nif/src/es').absolutePath,
            tofile:file('build/generated/wsdl2java/axis2/nif/es').absolutePath
    )
}

tasks.getByName("axis2Wsdl2javaRecargo").doLast {
    ant.move(
            file:file('build/generated/wsdl2java/axis2/recargo/src/es').absolutePath,
            tofile:file('build/generated/wsdl2java/axis2/recargo/es').absolutePath
    )
}


test{
    environment('CHECKNIF_CERTIFICADO', project.findProperty('CHECKNIF_CERTIFICADO')?:'certificado.p12')
    environment('CHECKNIF_PASSWORD', project.findProperty('CHECKNIF_PASSWORD')?:'lapwd')
}